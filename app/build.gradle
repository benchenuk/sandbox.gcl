/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// In your build.gradle dependencies { ... } block

dependencies {
    // LangChain4j for core AI orchestration and Ollama integration
    implementation 'dev.langchain4j:langchain4j:0.32.0'
    implementation 'dev.langchain4j:langchain4j-ollama:0.32.0'

    // Gson for easy and reliable JSON processing
    implementation 'com.google.code.gson:gson:2.10.1'

    // SLF4J for logging, which is used by LangChain4j
    implementation 'org.slf4j:slf4j-simple:2.0.13'

    // Default Gradle dependencies
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.sandbox.gcl.ContextEngineMain'
}

run {
    standardInput = System.in
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
